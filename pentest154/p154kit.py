#!/bin/env python
from datetime import datetime

import click
from rich import print

from pentest154.html_formatter import convert_to_html
from pentest154.utils import print_msg, LineLoader
from pentest154.intelligence.whois import get_whois_info


@click.group()
def main():
	print('''[green]     ____    [/green]
[green]  __/ / /_   [/green][blue bold]P154 Kit @ Pentest154[/blue bold]
[green] /_  . __/   [/green][dim]Набор инструментария для разведки и пентеста[/dim]
[green]/_    __/    [/green][cyan dim]Разработчик: alxvdev (Алексеев Бронислав)[/cyan dim]
[green] /_/_/       [/green][cyan]https://github.com/alxvdev/pentest154[/cyan]
		''')


@main.command()
@click.option('--target', '-t', required=True, type=str, help="Целевой IP адрес или URL")
@click.option('--output', '-o', required=False, type=str, help='Запись вывода в файл')
def intelligence(target: str, output: str=None):
	"""
	Сбор развед-данных о цели

	:param      target:  IP/URL цели
	:type       target:  str
	:param      output:  Файл для вывода
	:type       output:  str
	"""

	full_report = {}
	current_datetime = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
	whois_loader = LineLoader("Собираем данные по whois...", "Данные собраны", 0.05)

	with whois_loader:
		report_data_tree, report_data_string = get_whois_info(target)
		full_report['whois'] = report_data_string

	print(report_data_tree)

	if output is not None:
		with open(output, 'w') as file:
			file.write(convert_to_html(f'Разведка сайта {target}', full_report, current_datetime))
		print_msg(f'Репорт сохранен в {output}')


if __name__ == '__main__':
	main()
